{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Pweet.js","components/PweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","AuthForm","newAccount","useState","email","setEmail","password","setPassword","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","alert","message","type","placeholder","required","Auth","setNewAccount","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onClick","prev","Pweet","pweetObj","isOwner","editing","setEditing","text","newPweet","setNewPweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","src","width","height","PweetFactory","userObj","pweet","setPweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","alt","Home","pweets","setPweets","useEffect","onSnapshot","snapshot","pweetArray","docs","map","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyPweets","where","orderBy","get","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c770978f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const authService = firebase.auth();\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"myBase\";\r\n\r\nconst AuthForm = ({ newAccount }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onChange = (event) => {\r\n    console.log(event.target.name);\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        name=\"email\"\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        required\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"password\"\r\n        required\r\n        value={password}\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"myBase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AuthForm newAccount={newAccount} />\r\n      </div>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Pweet = ({pweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newPweet, setNewPweet] = useState(pweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        if (window.confirm(\"Are you sure you want to delete this pweet?\")) {\r\n            dbService.doc(`pweets/${pweetObj.id}`).delete()\r\n            await storageService.refFromURL(pweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(pweetObj.text, newPweet)\r\n        await dbService.doc(`pweets/${pweetObj.id}`).update({\r\n            text: newPweet\r\n        });\r\n        setEditing(false)\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewPweet(value);   \r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    return(\r\n        <div>\r\n            { editing ? <>\r\n                <form onSubmit={onSubmit}>\r\n                    <input type=\"text\" placeholder=\"Edit your pweet\" value={newPweet} onChange={onChange} required />\r\n                    <input type=\"submit\" value=\"Update Pweet\" />\r\n                </form>\r\n                </> : <>\r\n                {pweetObj.attachmentUrl && (\r\n                    <img src={pweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                )}\r\n                <h4>{pweetObj.text}</h4>\r\n                {isOwner && <>\r\n                <button onClick={onDeleteClick}>Delete Pweet</button>\r\n                <button onClick={toggleEditing}>Edit Pweet</button>\r\n                </>}\r\n            </>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Pweet;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst PweetFactory = ({ userObj }) => {\r\n  const [pweet, setPweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState();\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment != \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const pweetObj = {\r\n      text: pweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"pweets\").add(pweetObj);\r\n    setPweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onClear = () => setAttachment(null);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n        value={pweet}\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"pweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" alt=\"lslsls\" />\r\n          <button onClick={onClear}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { dbService } from \"myBase\";\r\nimport Pweet from \"../components/Pweet\";\r\nimport PweetFactory from \"components/PweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [pweets, setPweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"pweets\").onSnapshot((snapshot) => {\r\n      const pweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setPweets(pweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <PweetFactory userObj={userObj} />\r\n      </div>\r\n      <div>\r\n        {pweets.map((pweet) => (\r\n          <Pweet\r\n            key={pweet.id}\r\n            pweetObj={pweet}\r\n            isOwner={pweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n      <span>Home</span>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport {authService, dbService} from \"myBase\"\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n    }\r\n    const getMyPweets = async() => {\r\n        const pweets = await dbService.collection(\"pweets\").where(\r\n            \"creatorId\", \"==\", userObj.uid\r\n        ).orderBy(\"createdAt\", \"desc\")\r\n        .get();\r\n        console.log(pweets.docs.map(doc => doc.data()))\r\n    }\r\n    useEffect(() => {\r\n        getMyPweets();\r\n    }, [])\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            })\r\n            refreshUser();\r\n        }\r\n    }\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {target:{value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    return ( <>\r\n    <form onSubmit={onSubmit}>\r\n        <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value = {newDisplayName}/>\r\n        <input type=\"submit\" value=\"Update profile\" />\r\n    </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n    </>)\r\n}\r\n\r\n<span>Profile</span>","import React from \"react\" \r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React from \"react\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";import Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\"\r\nimport Navigation from \"components/Navigation\"\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                    </Route>\r\n                </> : <> \r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                </>}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport myBase from \"myBase\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}